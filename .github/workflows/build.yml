name: Build and Package with Nuitka

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/build.yml"
      - "Aumiao-py/src/**/*.py"
  pull_request:
    branches: [main]
    paths:
      - ".github/workflows/build.yml"
      - "Aumiao-py/src/**/*.py"
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.13"
  UPX_VERSION: "4.2.4"
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Beijing Timezone
        shell: bash
        run: |
          echo "BUILD_DATE=$(TZ=Asia/Shanghai date +'%y%m%d')" >> $GITHUB_ENV
          echo "BUILD_TIME=$(TZ=Asia/Shanghai date +'%H%M%S')" >> $GITHUB_ENV
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
          cache: "pip"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: |
            **/*requirements*.txt
            **/*requirements*.in
            **/pyproject.toml
            **/uv.lock

      # - name: Cache Dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.cache/uv
      #       ~/AppData/Local/uv
      #     key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}

      - name: Install 7-Zip
        shell: pwsh
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri "https://www.7-zip.org/a/7z2409-x64.msi" -OutFile "7z-installer.msi"
          Start-Process msiexec.exe -ArgumentList "/i 7z-installer.msi /quiet" -Wait
          Add-Content -Path $env:GITHUB_PATH -Value "C:\Program Files\7-Zip"

      - name: Setup Virtual Environment
        shell: pwsh
        run: |
          # 确保Python版本匹配
          uv python install ${{ env.PYTHON_VERSION }}
          uv venv .venv --python=3.13
          # 将venv路径持久化
          echo "VENV_PATH=$pwd/.venv" >> $env:GITHUB_ENV

      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        env:
          VIRTUAL_ENV: ${{ env.VENV_PATH }}
        with:
          assume-yes-for-downloads: true
          company-name: "Aumiao Team"
          copyright: "Copyright © 2025 喵鱼a. All rights reserved."
          file-version: "2.0.0"
          follow-imports: true
          jobs: 4
          lto: "yes"
          mode: standalone
          output-dir: build
          output-filename: aumiao
          product-name: "Aumiao"
          product-version: "2.0.0"
          script-name: ./Aumiao-py/main.py
          show-progress: true
          windows-console-mode: force
          windows-icon-from-ico: "./Aumiao-py/src/project/favicon.ico"

      - name: Prepare Distribution
        shell: pwsh
        run: |
          $distDir = "build/main.dist"
          New-Item -Path "$distDir/.log" -ItemType Directory -Force
          $essentialFiles = @(
              "./Aumiao-py/README.txt",
              "./Aumiao-py/DISCLAIMER.txt",
              "./Aumiao-py/data"
          )
          Copy-Item -Path $essentialFiles -Destination $distDir -Recurse -Force
          $versionInfo = @{
              Version   = "2.0.0"
              BuildDate = "${{ env.BUILD_DATE }}"
              GitCommit = "${{ env.GIT_SHA }}"
          } | ConvertTo-Json
          Set-Content -Path "$distDir/version.json" -Value $versionInfo

      - name: Optimize Binaries
        shell: pwsh
        continue-on-error: true
        run: |
          if (-not (Test-Path "./upx.exe")) {
              $ProgressPreference = 'SilentlyContinue'
              Invoke-WebRequest "https://github.com/upx/upx/releases/download/v${{ env.UPX_VERSION }}/upx-${{ env.UPX_VERSION }}-win64.zip" -OutFile upx.zip
              Expand-Archive upx.zip -DestinationPath upx_tmp
              Move-Item upx_tmp/upx*/upx.exe . -ErrorAction SilentlyContinue
              Remove-Item upx_tmp, upx.zip -Recurse -Force
          }
          $ErrorActionPreference = 'Continue'
          ./upx.exe --best --lzma ./build/main.dist/aumiao.exe 2>&1 | Tee-Object -FilePath "$pwd/build/upx-main.log"
          Get-ChildItem ./build/main.dist/*.dll | ForEach-Object {
              ./upx.exe --best --lzma $_.FullName 2>&1 | Tee-Object -FilePath "$pwd/build/upx-dll.log" -Append
          }

      - name: Package Artifacts
        shell: pwsh
        run: |
          $packageName = "Aumiao_v2.0.0.${{ env.BUILD_DATE }}_alpha.zip"
          $distDir = Resolve-Path "./build/main.dist"
          7z a -tzip "$(Resolve-Path "./build")/$packageName" "$distDir\*"

      - name: Upload Release Package
        uses: actions/upload-artifact@v4
        with:
          name: Aumiao_v2.0.0.${{ env.BUILD_DATE }}_alpha
          path: build/*.zip
          retention-days: 7

      - name: Upload Debug Files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Build_Debug_${{ env.BUILD_DATE }}
          path: |
            build/**/*.log
            build/**/*.json
            **/nuitka-*.log
            **/nuitka-*.xml
          if-no-files-found: ignore
          retention-days: 14
