name: Build and Package with Nuitka

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENSE"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENSE"
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.13"
  UPX_VERSION: "4.2.4"
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Beijing Timezone
        shell: bash
        run: |
          # 设置东八区时区
          echo "BUILD_DATE=$(TZ=Asia/Shanghai date +'%y%m%d')" >> $GITHUB_ENV
          echo "BUILD_TIME=$(TZ=Asia/Shanghai date +'%H%M%S')" >> $GITHUB_ENV
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: "x64"
          cache: "pip"

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pip
            ~/.cache/uv
            upx.exe
          key: ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-${{ hashFiles('**/requirements.txt') }}-upx-${{ env.UPX_VERSION }}
          restore-keys: |
            ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-

      - name: Install System Tools
        shell: pwsh
        run: |
          winget install 7zip.7zip
          Add-Type -AssemblyName System.IO.Compression.FileSystem

      - name: Setup Python Environment
        shell: pwsh
        run: |
          python -m venv .venv
          .\.venv\Scripts\activate
          pip install -U pip uv
          uv pip install --system -r ./Aumiao-py/src/project/requirements.txt

      - name: Build with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          assume-yes-for-downloads: true
          company-name: "Aumiao Team"
          copyright: "Copyright © 2025 喵鱼a. All rights reserved."
          file-version: "2.0.0"
          follow-imports: true
          jobs: 4
          lto: "yes"
          mode: standalone
          output-dir: build
          product-name: "Aumiao"
          product-version: "2.0.0"
          script-name: ./Aumiao-py/main.py
          windows-icon-from-ico: "./Aumiao-py/src/project/favicon.ico"
          windows-console-mode: force

      - name: Prepare Distribution
        shell: pwsh
        run: |
          $distDir = "build/main.dist"
          New-Item -Path "$distDir/.logs" -ItemType Directory -Force

          $essentialFiles = @(
              "./Aumiao-py/README.txt",
              "./Aumiao-py/DISCLAIMER.txt",
              "./Aumiao-py/data"
          )
          Copy-Item -Path $essentialFiles -Destination $distDir -Recurse -Force

          $versionInfo = @{
              Version   = "2.0.0"
              BuildDate = "${{ env.BUILD_DATE }}"
              GitCommit = "${{ env.GIT_SHA }}"
          } | ConvertTo-Json
          Set-Content -Path "$distDir/version.json" -Value $versionInfo

      - name: Optimize Binaries
        shell: pwsh
        continue-on-error: true # 关键修改：忽略UPX错误
        run: |
          if (-not (Test-Path "./upx.exe")) {
              $ProgressPreference = 'SilentlyContinue'
              Invoke-WebRequest "https://github.com/upx/upx/releases/download/v${{ env.UPX_VERSION }}/upx-${{ env.UPX_VERSION }}-win64.zip" -OutFile upx.zip
              Expand-Archive upx.zip -DestinationPath upx_tmp
              Move-Item upx_tmp/upx*/upx.exe . -ErrorAction SilentlyContinue
              Remove-Item upx_tmp, upx.zip -Recurse -Force
          }

          # 强制继续执行后续命令
          $ErrorActionPreference = 'Continue'
          ./upx.exe --best --lzma ./build/main.dist/main.exe 2>&1 | Out-Null
          Get-ChildItem ./build/main.dist/*.dll | ForEach-Object {
              ./upx.exe --best --lzma $_.FullName 2>&1 | Out-Null
          }

      - name: Package Artifacts
        shell: pwsh
        continue-on-error: true

      - name: Package Build
        run: |
          $packageName = "Aumiao_v2.0.0.${{ env.BUILD_DATE }}_alpha.zip"
          7z a -tzip "./build/$packageName" ./build/main.dist/*

      - name: Upload Release Package
        uses: actions/upload-artifact@v4
        with:
          name: Aumiao_v2.0.0.${{ env.BUILD_DATE }}_alpha
          path: build/*.zip
          retention-days: 7

      - name: Upload Debug Files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Build_Debug_${{ env.BUILD_DATE }}
          path: |
            build/**/*.log
            build/**/*.json
            **/nuitka-*.log
          retention-days: 14
