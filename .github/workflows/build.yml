name: Build and Package with Nuitka

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENSE"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENSE"
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.13"
  UPX_VERSION: "4.2.4"
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: "x64"
          cache: "pip"
          check-latest: true

      - name: Cache virtual environment
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pip
            ~/.cache/uv
          key: venv-${{ runner.os }}-py${{ env.PYTHON_VERSION }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-py${{ env.PYTHON_VERSION }}-

      - name: Set Up UV
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"

      - name: Install Dependencies
        run: |
          python -m venv .venv
          . .venv/Scripts/activate
          uv pip install -r ./Aumiao-py/src/project/requirements.txt
        shell: pwsh

      - name: Get Version Info
        id: version
        run: |
          echo "BUILD_DATE=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          assume-yes-for-downloads: true
          company-name: "Aumiao Team"
          copyright: "Copyright © 2025 喵鱼a. All rights reserved."
          file-description: "Build: ${{ steps.version.outputs.BUILD_DATE }} (${{ steps.version.outputs.GIT_SHA }})"
          file-version: "2.0.0"
          follow-imports: true
          jobs: ${{ runner.os == 'Windows' && 4 || 2 }}
          lto: "yes"
          mode: standalone
          nuitka-version: main
          output-dir: build
          product-name: "Aumiao"
          product-version: "2.0.0"
          remove-output: true
          script-name: ./Aumiao-py/main.py
          windows-console-mode: force
          windows-icon-from-ico: "./Aumiao-py/src/project/favicon.ico"

      - name: Cache UPX
        id: cache-upx
        uses: actions/cache@v4
        with:
          path: upx.exe
          key: upx-${{ env.UPX_VERSION }}-win64

      - name: Download and Install UPX
        if: steps.cache-upx.outputs.cache-hit != 'true'
        run: |
          Invoke-WebRequest -Uri "https://github.com/upx/upx/releases/download/v${{ env.UPX_VERSION }}/upx-${{ env.UPX_VERSION }}-win64.zip" -OutFile "upx.zip"
          Expand-Archive -Path "upx.zip" -DestinationPath "upx_tmp"
          Move-Item -Path "upx_tmp/upx-${{ env.UPX_VERSION }}-win64/upx.exe" -Destination "upx.exe"
          Remove-Item -Recurse -Force upx_tmp, upx.zip
        shell: pwsh

      - name: Copy Additional Files
        run: |
          New-Item -Path "build/main.dist/.log" -ItemType Directory -Force
          Copy-Item "./Aumiao-py/README.txt" -Destination "build/main.dist/"
          Copy-Item "./Aumiao-py/DISCLAIMER.txt" -Destination "build/main.dist/"
          Copy-Item "./Aumiao-py/data" -Destination "build/main.dist/" -Recurse
        shell: pwsh

      - name: Compress with UPX
        run: |
          $exePath = "build/main.dist/main.exe"
          ./upx.exe --best --lzma $exePath
          Get-ChildItem "build/main.dist/*.dll" | ForEach-Object {
            ./upx.exe --best --lzma $_.FullName
          }
        shell: pwsh
        continue-on-error: true

      - name: Package Build
        run: |
          7z a -tzip "build/Aumiao-${{ steps.version.outputs.GIT_SHA }}-win64.zip" "build/main.dist/*"
        shell: pwsh

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Aumiao-${{ steps.version.outputs.GIT_SHA }}-win64
          path: build/Aumiao-*-win64.zip
          retention-days: 5

      - name: Upload Build Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ steps.version.outputs.GIT_SHA }}
          path: |
            build/**/*.xml
          retention-days: 5